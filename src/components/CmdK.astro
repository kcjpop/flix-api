---
import { getNamespaces } from '../data'
---

<style is:global>
  ::backdrop {
    background-color: #333;
    opacity: 0.8;
  }
</style>

<style>
  .dialog {
    width: clamp(60ch, var(--size-7), 90svw);
    padding: var(--size-3);
  }

  .btn {
    padding: var(--size-2) var(--size-3);
    border-radius: var(--radius-2);
    font-weight: 600;
  }

  .btn-default {
    background-color: var(--blue-2);
    color: var(--blue-8);
  }
</style>

<dialog
  id="js-cmdk"
  class="dialog"
  aria-label="Jump to definitions"
  aria-describedby="Quickly jump to another namespace"
>
  <form method="dialog" class="grid gap-3">
    <input
      id="js-cmdk-keyword"
      type="search"
      name="keyword"
      placeholder="Type a namespace and press Enter to jump, case insensitive"
      list="js-current-ns-defs"
      class="input"
      autofocus
      autocomplete="off"
    />

    <div class="flex gap-2 align-center justify-space-between">
      <button class="btn btn-default" value="default">Jump</button>
      <button class="btn" value="cancel">Cancel</button>
    </div>
  </form>
</dialog>

<datalist id="js-current-ns-defs">
  {getNamespaces().map((ns) => <option value={ns} />)}
</datalist>

<script>
  const on = (el, ev, fn) => el.addEventListener(ev, fn)

  const d = document.getElementById('js-cmdk') as HTMLDialogElement
  const s = document.getElementById('js-cmdk-keyword') as HTMLInputElement

  const validNamespaces = Array.from(
    document.getElementById('js-current-ns-defs').querySelectorAll('option'),
  ).map((node) => node.value.trim())

  on(d, 'close', (e) => {
    if (e.currentTarget.returnValue === 'cancel') return

    const form = e.currentTarget.querySelector('form')
    const keyword = form.elements.keyword.value
    const regex = new RegExp(keyword, 'gi')

    // Find exact ns first
    const exact = validNamespaces.find(
      (ns) => ns.toLowerCase() === keyword.toLowerCase(),
    )

    if (exact) return window.location.assign('/' + exact)

    // If not, find similar ns
    const valid = validNamespaces.find((ns) => regex.test(ns))

    if (!valid) alert('Cannot find namespace: ' + keyword)
    else window.location.assign('/' + valid)
  })

  on(document, 'keydown', (e) => {
    // Don't do anything if the dialog is already open
    // or we're composing in IME mode.
    if (e.isComposing || e.keyCode === 229 || d.open) {
      return
    }

    if (e.key === 'k') {
      e.preventDefault()
      e.stopPropagation()

      // Reset keyword before showing Cmd K
      s.value = ''
      d.showModal()
    }
  })
</script>
