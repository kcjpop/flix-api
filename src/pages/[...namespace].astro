---
import { getNamespace, getNamespaces } from '../data.js'

import s from './namespace.module.css'

import AsideLinks from '../components/AsideLinks.astro'
import Classes from '../components/Classes.astro'
import Definitions from '../components/Definitions.astro'
import BaseLayout from '../layouts/Base.astro'

import IconArrowFromLeft from '../components/IconArrowFromLeft.astro'
import IconArrowFromRight from '../components/IconArrowFromRight.astro'
import IconClose from '../components/IconClose.astro'

export function getStaticPaths() {
  return getNamespaces().map((ns) => {
    return { params: { namespace: ns } }
  })
}

const { namespace } = Astro.params
const ns = getNamespace(namespace)

const classes = ns.classes?.map((c) => ({
  link: `#c-${c.sym.name}`,
  name: c.sym.name,
}))

const definitions = ns.defs?.map((d) => ({
  link: `#d-${d.sym.name}`,
  name: d.sym.name,
}))

const namespaces = getNamespaces().map((ns) => ({
  link: `/${ns}`,
  name: ns,
}))
---

<BaseLayout>
  <aside slot="left">
    <div class="aside aside--left" id="aside-left">
      <a title="Close" class="aside-btn-close aside-btn-close--left" href="#">
        <IconClose />
      </a>

      <AsideLinks name="Namespaces" items={namespaces} />
    </div>
  </aside>

  <aside slot="right">
    <div class="aside aside--right" id="aside-right">
      <a title="Close" class="aside-btn-close aside-btn-close--right" href="#">
        <IconClose />
      </a>

      <AsideLinks type="class" name="Classes" items={classes} />
      <AsideLinks type="def" name="Definitions" items={definitions} />
    </div>
  </aside>

  <div
    class="p-3 sticky"
    style="--top: 0; border-bottom: 1px solid var(--gray-2)"
  >
    <div class="flex align-center justify-space-between">
      <a role="button" class={s.btnAside} href="#aside-left">
        <IconArrowFromLeft />
      </a>

      <a role="button" class={s.btnAside} href="#aside-right">
        <IconArrowFromRight />
      </a>
    </div>

    <h1>{namespace}</h1>
  </div>

  {
    ns.classes?.length > 0 && (
      <div class="px-3 grid gap-3 mb-3">
        <Classes classes={ns.classes} s={s} />
      </div>
    )
  }

  {
    ns.defs?.length > 0 && (
      <div class="px-3 grid gap-3 mb-3">
        <Definitions defs={ns.defs} />
      </div>
    )
  }

  <script>
    function toggleOverflowHidden() {
      if (location.hash === '#aside-left' || location.hash === '#aside-right') {
        // Aside is visible, hide overflow on body
        document.body.classList.add('overflow-hidden')
      } else {
        document.body.classList.remove('overflow-hidden')
      }
    }

    window.addEventListener('load', toggleOverflowHidden)
    window.addEventListener('hashchange', toggleOverflowHidden)
  </script>
</BaseLayout>
