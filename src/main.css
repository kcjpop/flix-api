@custom-media --large (min-width: 80em);
@custom-media --small (max-width: 80em);

html {
  /* Height of header, including the namespace name and 2 buttons. Quite arbitrary. */
  scroll-padding-top: 140px;
}

body {
  /* Default separator character used in type parameters, formal parameters, etc. */
  --sep: ', ';

  --font-mono: 'Spline Sans Mono', Dank Mono, Operator Mono, Inconsolata,
    Fira Mono, ui-monospace, SF Mono, Monaco, Droid Sans Mono, Source Code Pro,
    monospace;

  /* This is for mobile */
  --aside-width: 70vw;

  /* Need to use svh here or the address bar on mobile will cover the sidebar */
  --main-content-height: 100svh;

  --surface-1: #fff;

  --z-index-aside: 1000;

  /* Tokens */
  --t-name: #b12250;
  --t-type: #3061c4;
  --t-kind: #8a8a8a;
  --t-keyword: #333;
  --t-effect: #d4671e;
  --t-annotation: #b15422;

  @media (--large) {
    --aside-width: 15vw;
  }
}

/* Inline code */
:where(:not(pre) > code) {
  color: var(--red-7);
}

body {
  color: var(--gray-8);
  font-family: var(--font-sans);
}

.app {
  @media (--large) {
    display: grid;
    grid-template-columns: var(--aside-width) 1fr var(--aside-width);
  }
}

.main {
  display: grid;
  gap: var(--size-3);
  align-content: flex-start;

  @media (--large) {
    scroll-padding-top: 110px;
    height: var(--main-content-height);
    overflow: auto;
  }
}

.aside {
  display: none;
  position: relative;

  @media (--large) {
    display: block;
    height: var(--main-content-height);
    overflow: auto;
    position: sticky;
    top: var(--size-1);
  }
}

@media (--small) {
  .aside--left:target {
    left: 0;
  }

  .aside--right:target {
    right: 0;
  }

  .aside:target {
    display: block;
    position: fixed;
    width: var(--aside-width);
    top: 0;
    background-color: var(--surface-1);
    z-index: var(--z-index-aside);
    box-shadow: var(--shadow-4);
    border-left: 1px solid var(--gray-2);
    height: var(--main-content-height);
    overflow: auto;
  }
}

.aside-btn-close {
  position: absolute;
  top: var(--size-2);
  right: var(--size-2);
  z-index: calc(var(--z-index-aside) + 1);
  padding: var(--size-2);
  background-color: var(--gray-1);
  color: var(--gray-9);
  border-radius: var(--radius-1);

  @media (--large) {
    display: none;
  }

  &::before {
    content: '';
    cursor: pointer;
    background-color: rgba(0, 0, 0, 0.5);
    position: fixed;
    width: 100vw;
    height: 100vh;
    top: 0;
    z-index: 1;
  }
}

.aside-btn-close--left::before {
  left: var(--aside-width);
}

.aside-btn-close--right::before {
  right: var(--aside-width);
}

.t-keyword {
  color: var(--t-keyword);
}

.t-name {
  color: var(--t-name);
}

.t-type {
  color: var(--t-type);
}

.t-kind {
  color: var(--t-kind);
}

.t-effect {
  color: var(--t-effect);
}

.t-annotation {
  color: var(--t-annotation);
}
