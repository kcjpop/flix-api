@custom-media --large (min-width: 80em);

body {
  /* Default separator character used in type parameters, formal parameters, etc. */
  --sep: ', ';

  --font-mono: 'Spline Sans Mono', Dank Mono, Operator Mono, Inconsolata,
    Fira Mono, ui-monospace, SF Mono, Monaco, Droid Sans Mono, Source Code Pro,
    monospace;

  --aside-width: 15svw;
  --main-content-height: 100vh;

  --surface-1: #fff;

  /* Tokens */
  --t-name: #b12250;
  --t-type: #3061c4;
  --t-kind: #8a8a8a;
  --t-keyword: #333;
  --t-effect: #d4671e;
}

/* Inline code */
:where(:not(pre) > code) {
  color: var(--red-7);
}

body {
  color: var(--gray-8);
}

.app {
  @media (--large) {
    display: grid;
    grid-template-columns: var(--aside-width) 1fr var(--aside-width);
  }
}

.main {
  padding-left: var(--size-3);
  padding-right: var(--size-3);

  @media (--large) {
    height: var(--main-content-height);
    overflow: auto;
  }
}

.aside {
  display: none;

  @media (--large) {
    display: block;
    height: var(--main-content-height);
    overflow: auto;
    position: sticky;
    top: var(--size-1);
  }
}

.t-keyword {
  color: var(--t-keyword);
}

.t-name {
  color: var(--t-name);
}

.t-type {
  color: var(--t-type);
}

.t-kind {
  color: var(--t-kind);
}

.t-effect {
  color: var(--t-effect);
}
